// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: package.proto

/*
Package domain is a generated protocol buffer package.

It is generated from these files:
	package.proto
	remote_crawler.proto
	tocrawlentry.proto

It has these top-level messages:
	Package
	PackageCrawl
	PackageSnapshot
	UpdateOperations
	ToCrawlEntry
*/
package domain

import go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/gogo/protobuf/types"

import time "time"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

func (this *Package) Validate() error {
	if this.FirstSeenAt != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.FirstSeenAt); err != nil {
			return go_proto_validators.FieldError("FirstSeenAt", err)
		}
	}
	if this.Data != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return go_proto_validators.FieldError("Data", err)
		}
	}
	for _, item := range this.History {
		if item != nil {
			if err := go_proto_validators.CallValidatorIfExists(item); err != nil {
				return go_proto_validators.FieldError("History", err)
			}
		}
	}
	return nil
}
func (this *PackageCrawl) Validate() error {
	if this.JobStartedAt != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.JobStartedAt); err != nil {
			return go_proto_validators.FieldError("JobStartedAt", err)
		}
	}
	if this.JobFinishedAt != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.JobFinishedAt); err != nil {
			return go_proto_validators.FieldError("JobFinishedAt", err)
		}
	}
	if this.Data != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *PackageSnapshot) Validate() error {
	if this.CreatedAt != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	return nil
}
