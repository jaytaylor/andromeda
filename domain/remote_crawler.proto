syntax = "proto3";

package domain;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

import "package.proto";
import "tocrawlentry.proto";

option go_package = "jaytaylor.com/andromeda/domain";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://jaytaylor.com/andromeda";
    description: "Andromeda Galaxy Golang Packages Database";
  }
  schemes: HTTPS;
};

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;

message CrawlResult {
  Package Package = 1;
  map<string, PackageReference> imported_resources = 2; // Root Import Path -> Package Path.
  string ErrMsg = 3;
}

service RemoteCrawlerService {
  // rpc Next() returns (ToCrawlEntry) {}
  rpc Attach(stream CrawlResult) returns (stream ToCrawlEntry) {
    option (google.api.http) = {
      post: "/api/v1/attach"
      body: "*"
    };
  }
}

// message UpdatesDelta {
//   Package Package = 1;
//   repeated ToCrawlEntry ToCrawls = 2;
//   repeated string ReferencedPackages = 3;
// }

// message ImportRelation {
//   PackagePath string = 1;
//   ReferencedBy string = 2;
// }
