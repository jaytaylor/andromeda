package feed

import (
	"io"
	"net/http"
	"net/http/httptest"
	"os"
	"path/filepath"
	"testing"

	"jaytaylor.com/andromeda/db"
)

func TestReddit(t *testing.T) {
	filename := filepath.Join(os.TempDir(), "reddit-feed-test.bolt")

	os.Remove(filename)

	var (
		config = db.NewBoltConfig(filename)
		client = db.NewClient(config)
	)

	if err := client.Open(); err != nil {
		t.Fatal(err)
	}
	defer func() {
		if err := client.Close(); err != nil {
			t.Fatal(err)
		}
	}()
	defer os.Remove(filename)

	s := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		io.WriteString(w, redditTestData)
	}))
	defer s.Close()

	RedditAPIURL = s.URL + "/x?perPage=%v"

	ds := NewReddit(client, "golang")

	possiblePkgs, err := ds.Refresh()
	if err != nil {
		t.Fatal(err)
	}
	t.Logf("possiblePkgs(%v)=%+v", len(possiblePkgs), possiblePkgs)
	if len(possiblePkgs) < 10 {
		t.Errorf("Expected len(possiblePkgs) >= 10 but actual=%v", len(possiblePkgs))
	}
}

const redditTestData = `{"kind": "Listing", "data": {"modhash": "", "dist": 25, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Go SDK Auto-Generator Contribution Quickstart for OpenAPI Generator (Swagger Codegen fork)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": true, "name": "t3_90kcf9", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "domain": "medium.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1532153840.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90kcf9", "report_reasons": null, "author": "grokify", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90kcf9/go_sdk_autogenerator_contribution_quickstart_for/", "whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/ringcentral-developers/openapi-generator-for-go-contribution-quickstart-8cc72bf37b53", "subreddit_subscribers": 49878, "created_utc": 1532125040.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I'm tried to use [go-cloudflare-scraper](https://github.com/cardigann/go-cloudflare-scraper) but it didn't update more than year, is there another libraries, examples or something else for bypass cloudflare scrape", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "bypass cloudflare scrape", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90imz5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1532141242.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m tried to use &lt;a href=\"https://github.com/cardigann/go-cloudflare-scraper\"&gt;go-cloudflare-scraper&lt;/a&gt; but it didn&amp;#39;t update more than year, is there another libraries, examples or something else for bypass cloudflare scrape&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "richtext", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90imz5", "report_reasons": null, "author": "trigun1117", "num_crossposts": 0, "num_comments": 3, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90imz5/bypass_cloudflare_scrape/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/90imz5/bypass_cloudflare_scrape/", "subreddit_subscribers": 49878, "created_utc": 1532112442.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The newest language Brian Kernighan uses is Go", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90ie25", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "domain": "youtube.com", "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/VVpRj3Po6K4?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "author_flair_template_id": null, "is_original_content": false, "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Brian Kernighan Q&amp;A 2/3 - Computerphile", "type": "video", "author_name": "Computerphile", "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/VVpRj3Po6K4?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/VVpRj3Po6K4/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/Computerphile"}}, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/VVpRj3Po6K4?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/90ie25", "height": 338}, "link_flair_text": null, "can_mod_post": false, "score": 36, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1532139488.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Brian Kernighan Q&amp;A 2/3 - Computerphile", "type": "video", "author_name": "Computerphile", "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/VVpRj3Po6K4?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/VVpRj3Po6K4/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/user/Computerphile"}}, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90ie25", "report_reasons": null, "author": "JavaSuck", "num_crossposts": 0, "num_comments": 3, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90ie25/the_newest_language_brian_kernighan_uses_is_go/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=VVpRj3Po6K4", "subreddit_subscribers": 49878, "created_utc": 1532110688.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is go a good language for someone to learn with no previous coding experience? Looking to start as a hobby.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90gkzm", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1532126757.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90gkzm", "report_reasons": null, "author": "Jas_sd", "num_crossposts": 0, "num_comments": 16, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90gkzm/is_go_a_good_language_for_someone_to_learn_with/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/90gkzm/is_go_a_good_language_for_someone_to_learn_with/", "subreddit_subscribers": 49878, "created_utc": 1532097957.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Disclosures: I wrote the post and some of the packages used in the example application.\n\n[https://www.pmg.com/blog/golang-from-scratch/](https://www.pmg.com/blog/golang-from-scratch/)", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to build a backend Golang App from Scratch", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90gkam", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1532126609.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Disclosures: I wrote the post and some of the packages used in the example application.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.pmg.com/blog/golang-from-scratch/\"&gt;https://www.pmg.com/blog/golang-from-scratch/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "richtext", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90gkam", "report_reasons": null, "author": "EricElsken", "num_crossposts": 0, "num_comments": 0, "send_replies": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/90gkam/how_to_build_a_backend_golang_app_from_scratch/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/90gkam/how_to_build_a_backend_golang_app_from_scratch/", "subreddit_subscribers": 49878, "created_utc": 1532097809.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Maps in Go (Golang) \u2013 Medium", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90fkf8", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "medium.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1532118579.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90fkf8", "report_reasons": null, "author": "onig90", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90fkf8/maps_in_go_golang_medium/", "whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@thatisuday/4af813337c71", "subreddit_subscribers": 49878, "created_utc": 1532089779.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GitHub - moogar0880/venom: A pluggable configuration management library with zero dependencies", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90fgjq", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1532117592.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90fgjq", "report_reasons": null, "author": "moogar0880", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90fgjq/github_moogar0880venom_a_pluggable_configuration/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/moogar0880/venom", "subreddit_subscribers": 49878, "created_utc": 1532088792.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hi everyone, I make simple example of session authentication with mysql\n\nThis is where you can check it -&gt; [Repo](https://github.com/bajro17/golang-session-auth) please if you have any suggestion tell me to improve it ", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Basic golang session auth", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90fg9o", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1532117525.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone, I make simple example of session authentication with mysql&lt;/p&gt;\n\n&lt;p&gt;This is where you can check it -&amp;gt; &lt;a href=\"https://github.com/bajro17/golang-session-auth\"&gt;Repo&lt;/a&gt; please if you have any suggestion tell me to improve it &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "richtext", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90fg9o", "report_reasons": null, "author": "bajrolisic91", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90fg9o/basic_golang_session_auth/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/90fg9o/basic_golang_session_auth/", "subreddit_subscribers": 49878, "created_utc": 1532088725.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hey folks!!!\n\nWhen I came to golang world I found that there are no validation library that suites my needs and I've started working on my own version. The library is ready and perfectly works on my projects to validate backend APIs client's input. And now I would like to share it with community. I'm in a process of writing documentation and adding new features to make it general purpose library. In a few days I'm planning to release full documentation and release first beta version in a 2-3 weeks.\n\n# Scope\n\nThis library tries to make it easier for developer to validate client's input and primarily aims backend API's developers, but also could work as a general purpose validation library.\n\n# Motivation\n\nWhy yet another Validation library?\n\n1. Statically typed validation rules\n2. Readable schemas via Fluent Interface pattern (Method chaining)\n3. Easy to extend validation logic\n4. Customizable error response\n\n# Call for Response\n\nAnd on this stage I would like to get a response from community on a few questions:\n\n1. What do you expect from validation library?\n2. What are your specific cases?\n3. What issues do you have with current approach?\n4. Any proposals would be taken into account and any thoughts appreciated.\n\nEven if you have nothing to say, but interested in a results - let me know and I will keep you informed of developments.\n\nStay tuned.", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Call for Opinion: What do you expect from validation library? (New validation library)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90ezb0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1532112769.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey folks!!!&lt;/p&gt;\n\n&lt;p&gt;When I came to golang world I found that there are no validation library that suites my needs and I&amp;#39;ve started working on my own version. The library is ready and perfectly works on my projects to validate backend APIs client&amp;#39;s input. And now I would like to share it with community. I&amp;#39;m in a process of writing documentation and adding new features to make it general purpose library. In a few days I&amp;#39;m planning to release full documentation and release first beta version in a 2-3 weeks.&lt;/p&gt;\n\n&lt;h1&gt;Scope&lt;/h1&gt;\n\n&lt;p&gt;This library tries to make it easier for developer to validate client&amp;#39;s input and primarily aims backend API&amp;#39;s developers, but also could work as a general purpose validation library.&lt;/p&gt;\n\n&lt;h1&gt;Motivation&lt;/h1&gt;\n\n&lt;p&gt;Why yet another Validation library?&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Statically typed validation rules&lt;/li&gt;\n&lt;li&gt;Readable schemas via Fluent Interface pattern (Method chaining)&lt;/li&gt;\n&lt;li&gt;Easy to extend validation logic&lt;/li&gt;\n&lt;li&gt;Customizable error response&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h1&gt;Call for Response&lt;/h1&gt;\n\n&lt;p&gt;And on this stage I would like to get a response from community on a few questions:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;What do you expect from validation library?&lt;/li&gt;\n&lt;li&gt;What are your specific cases?&lt;/li&gt;\n&lt;li&gt;What issues do you have with current approach?&lt;/li&gt;\n&lt;li&gt;Any proposals would be taken into account and any thoughts appreciated.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Even if you have nothing to say, but interested in a results - let me know and I will keep you informed of developments.&lt;/p&gt;\n\n&lt;p&gt;Stay tuned.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "richtext", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90ezb0", "report_reasons": null, "author": "AM_NiceDay", "num_crossposts": 0, "num_comments": 14, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90ezb0/call_for_opinion_what_do_you_expect_from/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/90ezb0/call_for_opinion_what_do_you_expect_from/", "subreddit_subscribers": 49878, "created_utc": 1532083969.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello\n\nI'm quite a beginner in the Go language but have felt in love with it. I'm a long time C language developer, and I've been coding some concepts to serve pages as data are fetched because the main website we're working on can serve heavy pages with different datasources.\n\nI'm trying to find a way to build this concept with the Go language. To describe the process in C to serve a web page:\n\n* each web pages are composed with nested templates\n* instead of fetching first all the data from our datasource and then sending them to the templating system\n\n1. we are associating each template to some functions: a data fetching function, a rendering function, and a data free'ing function\n2. the process start with the web page which is a template\n3. the data fetching function gets the data for the template\n4. we process the data in the template, then\n5. we search for the next nested template\n6. if we've found a nested template, we output the processed parent template up to the declaration of the nested template\n7. and we start over recursively at ` + "`" + `3.` + "`" + `, untill no more nested template are found\n8. we render recursively the remaining html/text of the rendered templates\n\nI've been searching for 2 days long for something similar in Go, with differents terms in my searches, but all I could come to is that the ` + "`" + `html/template` + "`" + ` package needs first all the data to be passed down the ` + "`" + `Execute*` + "`" + ` methods.\n\nThe TTFB (Time To First Byte) was one of the goals for this concept in C, but also to be able to render each piece of the page as the data for these pieces are fetched, so that the customer can watch the page starting to render and not to wait for all data to get fetched (which can take some time at the scale of such process).\n\nI could find that the ` + "`" + `ResponseWriter` + "`" + ` may implement the ` + "`" + `Flusher` + "`" + ` interface, which can help to then ` + "`" + `Flusher.Flush()` + "`" + ` the ` + "`" + `ResponseWriter` + "`" + ` and make the page to be output in ` + "`" + `chunked` + "`" + ` mode. But I could not find anything about starting a declared method/function when a nested template is found during the Parse process.\n\nShould I look for a custom templating? Any pointers? :)", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Researching: rendering nested template recursively with many data sources?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90etdf", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1532110912.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m quite a beginner in the Go language but have felt in love with it. I&amp;#39;m a long time C language developer, and I&amp;#39;ve been coding some concepts to serve pages as data are fetched because the main website we&amp;#39;re working on can serve heavy pages with different datasources.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to find a way to build this concept with the Go language. To describe the process in C to serve a web page:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;each web pages are composed with nested templates&lt;/li&gt;\n&lt;li&gt;instead of fetching first all the data from our datasource and then sending them to the templating system&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;ol&gt;\n&lt;li&gt;we are associating each template to some functions: a data fetching function, a rendering function, and a data free&amp;#39;ing function&lt;/li&gt;\n&lt;li&gt;the process start with the web page which is a template&lt;/li&gt;\n&lt;li&gt;the data fetching function gets the data for the template&lt;/li&gt;\n&lt;li&gt;we process the data in the template, then&lt;/li&gt;\n&lt;li&gt;we search for the next nested template&lt;/li&gt;\n&lt;li&gt;if we&amp;#39;ve found a nested template, we output the processed parent template up to the declaration of the nested template&lt;/li&gt;\n&lt;li&gt;and we start over recursively at &lt;code&gt;3.&lt;/code&gt;, untill no more nested template are found&lt;/li&gt;\n&lt;li&gt;we render recursively the remaining html/text of the rendered templates&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I&amp;#39;ve been searching for 2 days long for something similar in Go, with differents terms in my searches, but all I could come to is that the &lt;code&gt;html/template&lt;/code&gt; package needs first all the data to be passed down the &lt;code&gt;Execute*&lt;/code&gt; methods.&lt;/p&gt;\n\n&lt;p&gt;The TTFB (Time To First Byte) was one of the goals for this concept in C, but also to be able to render each piece of the page as the data for these pieces are fetched, so that the customer can watch the page starting to render and not to wait for all data to get fetched (which can take some time at the scale of such process).&lt;/p&gt;\n\n&lt;p&gt;I could find that the &lt;code&gt;ResponseWriter&lt;/code&gt; may implement the &lt;code&gt;Flusher&lt;/code&gt; interface, which can help to then &lt;code&gt;Flusher.Flush()&lt;/code&gt; the &lt;code&gt;ResponseWriter&lt;/code&gt; and make the page to be output in &lt;code&gt;chunked&lt;/code&gt; mode. But I could not find anything about starting a declared method/function when a nested template is found during the Parse process.&lt;/p&gt;\n\n&lt;p&gt;Should I look for a custom templating? Any pointers? :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "richtext", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90etdf", "report_reasons": null, "author": "y0m", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90etdf/researching_rendering_nested_template_recursively/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/90etdf/researching_rendering_nested_template_recursively/", "subreddit_subscribers": 49878, "created_utc": 1532082112.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Download link [https://golang.org/dl/#go1.11beta2](https://golang.org/dl/#go1.11beta2)\n\nTo find out what has changed in Go 1.11, read the draft release notes:\n\n[https://tip.golang.org/doc/go1.11](https://tip.golang.org/doc/go1.11)\n\nDocumentation for Go 1.11 is available at:\n\n[https://tip.golang.org/](https://tip.golang.org/)", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Golang 1.11 Beta 2 is out", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_90d5h0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 86, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 86, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1532091939.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Download link &lt;a href=\"https://golang.org/dl/#go1.11beta2\"&gt;https://golang.org/dl/#go1.11beta2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;To find out what has changed in Go 1.11, read the draft release notes:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://tip.golang.org/doc/go1.11\"&gt;https://tip.golang.org/doc/go1.11&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Documentation for Go 1.11 is available at:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://tip.golang.org/\"&gt;https://tip.golang.org/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "richtext", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "90d5h0", "report_reasons": null, "author": "Rafikithewd", "num_crossposts": 0, "num_comments": 6, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/90d5h0/golang_111_beta_2_is_out/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/90d5h0/golang_111_beta_2_is_out/", "subreddit_subscribers": 49878, "created_utc": 1532063139.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I am wanting to persuade my current employer that sending me to Gophercon is a good idea. We are not currently a go shop(though I would love that) so it makes it tricky. Any tips? So far I am thinking: community involvement, we use some tools written in go.", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Justifying going to Gophercon", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_9074pm", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1532044981.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am wanting to persuade my current employer that sending me to Gophercon is a good idea. We are not currently a go shop(though I would love that) so it makes it tricky. Any tips? So far I am thinking: community involvement, we use some tools written in go.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "9074pm", "report_reasons": null, "author": "fridder", "num_crossposts": 0, "num_comments": 12, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/9074pm/justifying_going_to_gophercon/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/9074pm/justifying_going_to_gophercon/", "subreddit_subscribers": 49878, "created_utc": 1532016181.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GoLB -- Yet another load balancer", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_904kx3", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1532023823.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "904kx3", "report_reasons": null, "author": "xiaoweihe", "num_crossposts": 0, "num_comments": 4, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/904kx3/golb_yet_another_load_balancer/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/onestraw/golb", "subreddit_subscribers": 49878, "created_utc": 1531995023.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Proposal: Add variadic maps to Go2", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_904h5u", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1532022664.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "904h5u", "report_reasons": null, "author": "metakeule", "num_crossposts": 0, "num_comments": 17, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/904h5u/proposal_add_variadic_maps_to_go2/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/golang/go/issues/26459", "subreddit_subscribers": 49878, "created_utc": 1531993864.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Displaying Pagination Results with a Skip Amount - An Example of Thinking Differently when Coding", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zycf0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "domain": "beeker.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1531969201.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zycf0", "report_reasons": null, "author": "beeker1121", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zycf0/displaying_pagination_results_with_a_skip_amount/", "whitelist_status": "all_ads", "stickied": false, "url": "http://beeker.io/displaying-pagination-results-with-skip-amount-example-of-thinking-differently", "subreddit_subscribers": 49878, "created_utc": 1531940401.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "dnss: a daemon for using DNS over HTTPS", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zzo1f", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1531978493.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zzo1f", "report_reasons": null, "author": "albertito", "num_crossposts": 0, "num_comments": 3, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zzo1f/dnss_a_daemon_for_using_dns_over_https/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/albertito/dnss", "subreddit_subscribers": 49878, "created_utc": 1531949693.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The Go Team at Google is Hiring!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zzinh", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 132, "domain": "go-jobs-at-goog.firebaseapp.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 132, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1531977389.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zzinh", "report_reasons": null, "author": "_dvrkps", "num_crossposts": 0, "num_comments": 39, "send_replies": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zzinh/the_go_team_at_google_is_hiring/", "whitelist_status": "all_ads", "stickied": false, "url": "https://go-jobs-at-goog.firebaseapp.com/", "subreddit_subscribers": 49878, "created_utc": 1531948589.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Building Go from Source", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zzffl", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "domain": "carolynvanslyck.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1531976720.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zzffl", "report_reasons": null, "author": "_dvrkps", "num_crossposts": 0, "num_comments": 0, "send_replies": false, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zzffl/building_go_from_source/", "whitelist_status": "all_ads", "stickied": false, "url": "https://carolynvanslyck.com/blog/2018/07/building-go-from-source/", "subreddit_subscribers": 49878, "created_utc": 1531947920.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "vim-go v1.18", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zxuex", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 124, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 124, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1531965811.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zxuex", "report_reasons": null, "author": "farslan", "num_crossposts": 0, "num_comments": 8, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zxuex/vimgo_v118/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/fatih/vim-go/releases/tag/v1.18", "subreddit_subscribers": 49878, "created_utc": 1531937011.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I started using this language in web development and now I'm addicted to it. It's so much fun to write code in go. I always hated unnecessary abstraction in languages (won't take a name). Go is such a small language with relevant stuffs only. No unnecessary bloated abstractions or features/ functions. I've officially made it my go to language today.\n\nThe best part is that all the important packages are already available in official repos. Dependency manager, unit tests, profilers etc are built in. And on top of all these, go has this amazing active community. There are so many videos and blogs about technical details in go that you don't need to look anywhere else.\n\nI'm really thankful for the maintainers and developers of this wonderful language. Keep GOing \ud83d\ude00", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I'm in love with Go. Literally &lt;3", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zxml6", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1531964344.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I started using this language in web development and now I&amp;#39;m addicted to it. It&amp;#39;s so much fun to write code in go. I always hated unnecessary abstraction in languages (won&amp;#39;t take a name). Go is such a small language with relevant stuffs only. No unnecessary bloated abstractions or features/ functions. I&amp;#39;ve officially made it my go to language today.&lt;/p&gt;\n\n&lt;p&gt;The best part is that all the important packages are already available in official repos. Dependency manager, unit tests, profilers etc are built in. And on top of all these, go has this amazing active community. There are so many videos and blogs about technical details in go that you don&amp;#39;t need to look anywhere else.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m really thankful for the maintainers and developers of this wonderful language. Keep GOing \ud83d\ude00&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zxml6", "report_reasons": null, "author": "sedgecrooked", "num_crossposts": 0, "num_comments": 66, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zxml6/im_in_love_with_go_literally_3/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/8zxml6/im_in_love_with_go_literally_3/", "subreddit_subscribers": 49878, "created_utc": 1531935544.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "Hello,\n\nI  have been working on a finance library to bring some of the commonly  used excel formulas to Go; PV, FV, PMT, RATE, NPER...\n\n[https://github.com/drum445/gofin](https://github.com/drum445/gofin)\n\nWould appreciate if you would take a look and give me feedback on what to add next or any ways of improving it\n\nThanks", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Finance Library (WIP)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zxgvw", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1531963335.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello,&lt;/p&gt;\n\n&lt;p&gt;I  have been working on a finance library to bring some of the commonly  used excel formulas to Go; PV, FV, PMT, RATE, NPER...&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/drum445/gofin\"&gt;https://github.com/drum445/gofin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Would appreciate if you would take a look and give me feedback on what to add next or any ways of improving it&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "richtext", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zxgvw", "report_reasons": null, "author": "drum445", "num_crossposts": 0, "num_comments": 6, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zxgvw/finance_library_wip/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/8zxgvw/finance_library_wip/", "subreddit_subscribers": 49878, "created_utc": 1531934535.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "I would like to learn a new language. It's either Python or Go. For now, I only have some bots on my mind, like trade bots, reddit bots, perhaps some Raspberry projects. What do you think? Is Go ideal for it?", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is Go ideal to write bots?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zxe3y", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "domain": "self.golang", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 6, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": true, "mod_note": null, "created": 1531962807.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I would like to learn a new language. It&amp;#39;s either Python or Go. For now, I only have some bots on my mind, like trade bots, reddit bots, perhaps some Raspberry projects. What do you think? Is Go ideal for it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zxe3y", "report_reasons": null, "author": "JohnDoe-TheRealOne", "num_crossposts": 0, "num_comments": 9, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zxe3y/is_go_ideal_to_write_bots/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/golang/comments/8zxe3y/is_go_ideal_to_write_bots/", "subreddit_subscribers": 49878, "created_utc": 1531934007.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A pretty simple library to ensure your work to be done", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zu44z", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1531936632.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zu44z", "report_reasons": null, "author": "shafreeck", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zu44z/a_pretty_simple_library_to_ensure_your_work_to_be/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/shafreeck/retry", "subreddit_subscribers": 49878, "created_utc": 1531907832.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "[Opinions please] GitHub - Kirides/go-webapi: MVC-Template with authentication and Vue.js frontend", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zub09", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1531938564.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zub09", "report_reasons": null, "author": "Kirides", "num_crossposts": 0, "num_comments": 3, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zub09/opinions_please_github_kiridesgowebapi/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/Kirides/go-webapi", "subreddit_subscribers": 49878, "created_utc": 1531909764.0, "mod_reports": [], "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "golang", "selftext": "", "user_reports": [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tailon: A web wrapper around tail, grep, sed and awk", "link_flair_richtext": [], "subreddit_name_prefixed": "r/golang", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_8zv8d0", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "secure_media": null, "is_reddit_media_domain": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "content_categories": null, "is_self": false, "mod_note": null, "created": 1531947181.0, "link_flair_type": "text", "wls": 6, "post_categories": null, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media": null, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "rte_mode": "markdown", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2rc7j", "mod_reason_by": null, "removal_reason": null, "id": "8zv8d0", "report_reasons": null, "author": "gvalkov", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "author_flair_text_color": null, "permalink": "/r/golang/comments/8zv8d0/tailon_a_web_wrapper_around_tail_grep_sed_and_awk/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/gvalkov/tailon", "subreddit_subscribers": 49878, "created_utc": 1531918381.0, "mod_reports": [], "is_video": false}}], "after": "t3_8zv8d0", "before": null}}`
